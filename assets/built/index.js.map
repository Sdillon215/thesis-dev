{"version":3,"file":"index.js","sources":["../js/init-pvs.js","../js/button-copy-link.js","../js/button-scroll-top.js","../js/navigation.js","../js/toggle-active-post-link.js","../js/scroll-to-active-post.js","../../node_modules/throttle-debounce/esm/index.js","../js/utils/debounce-resize.js","../js/scrollbar-width.js","../js/utils/throttle-scroll.js","../js/show-hide-scroll-progress.js","../../node_modules/tabbable/dist/index.esm.js","../../node_modules/focus-trap/dist/focus-trap.esm.js","../js/utils/body-overflow.js","../js/popup.js"],"sourcesContent":["/**\n * Init features from our PVS framework.\n */\n\nconst { pvs } = window;\n\nif (pvs) {\n\tpvs.initDarkMode();\n\tpvs.initLightbox({ zIndex: 9999 });\n\tpvs.initScrollProgress();\n\tpvs.initFilter();\n\tpvs.initPagination();\n\tpvs.initDropdown();\n\n\t// It is required to init navigation after filter and pagination.\n\tpvs.initNavigation();\n}\n","const { on } = window.ivent;\n\non(document, 'click', '[data-copy-link]', async (e) => {\n\te.preventDefault();\n\n\ttry {\n\t\tawait navigator.clipboard.writeText(\n\t\t\te.delegateTarget.getAttribute('data-copy-link'),\n\t\t);\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n});\n","window.ivent.on(document, 'click', '.scroll-progress-button', (e) => {\n\te.preventDefault();\n\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n});\n","// Remove category navigation item label prefix `- `\ndocument.querySelectorAll('.nav-category').forEach((el) => {\n\tel.textContent = el.textContent.replace(/^-\\s?/, '');\n});\n","const { on } = window.ivent;\n\n// Toggle active post link when content and sidebar updated.\non(document, 'pvs.navigation.content-rendered pvs.pagination.rendered', () => {\n\tconst currentHref = location.origin + location.pathname + location.search;\n\n\tdocument\n\t\t.querySelectorAll(\n\t\t\t'.sidebar-posts .card-link, .popup-content-posts .card-link',\n\t\t)\n\t\t.forEach((link) => {\n\t\t\tconst item = link.parentNode;\n\n\t\t\tif (link.href === currentHref) {\n\t\t\t\titem.classList.add('card-post-active');\n\t\t\t} else {\n\t\t\t\titem.classList.remove('card-post-active');\n\t\t\t}\n\t\t});\n});\n","const { on } = window.ivent;\n\nconst sidebar = document.querySelector('.sidebar-posts');\nlet activePost = document.querySelector('.card-post-active');\n\nfunction scrollToPost() {\n\tconst { scrollHeight, clientHeight, scrollTop } = sidebar;\n\tif (!activePost || scrollHeight <= clientHeight) return;\n\n\tconst itemOffsetTop = activePost.offsetTop;\n\tconst itemHeight = activePost.clientHeight;\n\tconst a = itemOffsetTop - clientHeight + itemHeight;\n\n\tif (scrollTop > itemOffsetTop || scrollTop < a) {\n\t\tsidebar.scroll({\n\t\t\ttop: itemOffsetTop - clientHeight / 2 + itemHeight / 2,\n\t\t\tbehavior: 'smooth',\n\t\t});\n\t}\n}\n\nscrollToPost();\n\n// On render page.\non(document, 'pvs.navigation.content-rendered', () => {\n\tactivePost = document.querySelector('.card-post-active');\n\n\tscrollToPost();\n});\n\n// On update list posts.\non(document, 'pvs.pagination.rendered', () => {\n\tactivePost = document.querySelector('.card-post-active');\n});\n","/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param {number} delay -                  A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher)\n *                                            are most useful.\n * @param {Function} callback -               A function to be executed after delay milliseconds. The `this` context and all arguments are passed through,\n *                                            as-is, to `callback` when the throttled-function is executed.\n * @param {object} [options] -              An object to configure options.\n * @param {boolean} [options.noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds\n *                                            while the throttled-function is being called. If noTrailing is false or unspecified, callback will be executed\n *                                            one final time after the last throttled-function call. (After the throttled-function has not been called for\n *                                            `delay` milliseconds, the internal counter is reset).\n * @param {boolean} [options.noLeading] -   Optional, defaults to false. If noLeading is false, the first throttled-function call will execute callback\n *                                            immediately. If noLeading is true, the first the callback execution will be skipped. It should be noted that\n *                                            callback will never executed if both noLeading = true and noTrailing = true.\n * @param {boolean} [options.debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is\n *                                            false (at end), schedule `callback` to execute after `delay` ms.\n *\n * @returns {Function} A new, throttled, function.\n */\nfunction throttle (delay, callback, options) {\n  var _ref = options || {},\n      _ref$noTrailing = _ref.noTrailing,\n      noTrailing = _ref$noTrailing === void 0 ? false : _ref$noTrailing,\n      _ref$noLeading = _ref.noLeading,\n      noLeading = _ref$noLeading === void 0 ? false : _ref$noLeading,\n      _ref$debounceMode = _ref.debounceMode,\n      debounceMode = _ref$debounceMode === void 0 ? undefined : _ref$debounceMode;\n  /*\n   * After wrapper has stopped being called, this timeout ensures that\n   * `callback` is executed at the proper times in `throttle` and `end`\n   * debounce modes.\n   */\n\n\n  var timeoutID;\n  var cancelled = false; // Keep track of the last time `callback` was executed.\n\n  var lastExec = 0; // Function to clear existing timeout\n\n  function clearExistingTimeout() {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n  } // Function to cancel next exec\n\n\n  function cancel(options) {\n    var _ref2 = options || {},\n        _ref2$upcomingOnly = _ref2.upcomingOnly,\n        upcomingOnly = _ref2$upcomingOnly === void 0 ? false : _ref2$upcomingOnly;\n\n    clearExistingTimeout();\n    cancelled = !upcomingOnly;\n  }\n  /*\n   * The `wrapper` function encapsulates all of the throttling / debouncing\n   * functionality and when executed will limit the rate at which `callback`\n   * is executed.\n   */\n\n\n  function wrapper() {\n    for (var _len = arguments.length, arguments_ = new Array(_len), _key = 0; _key < _len; _key++) {\n      arguments_[_key] = arguments[_key];\n    }\n\n    var self = this;\n    var elapsed = Date.now() - lastExec;\n\n    if (cancelled) {\n      return;\n    } // Execute `callback` and update the `lastExec` timestamp.\n\n\n    function exec() {\n      lastExec = Date.now();\n      callback.apply(self, arguments_);\n    }\n    /*\n     * If `debounceMode` is true (at begin) this is used to clear the flag\n     * to allow future `callback` executions.\n     */\n\n\n    function clear() {\n      timeoutID = undefined;\n    }\n\n    if (!noLeading && debounceMode && !timeoutID) {\n      /*\n       * Since `wrapper` is being called for the first time and\n       * `debounceMode` is true (at begin), execute `callback`\n       * and noLeading != true.\n       */\n      exec();\n    }\n\n    clearExistingTimeout();\n\n    if (debounceMode === undefined && elapsed > delay) {\n      if (noLeading) {\n        /*\n         * In throttle mode with noLeading, if `delay` time has\n         * been exceeded, update `lastExec` and schedule `callback`\n         * to execute after `delay` ms.\n         */\n        lastExec = Date.now();\n\n        if (!noTrailing) {\n          timeoutID = setTimeout(debounceMode ? clear : exec, delay);\n        }\n      } else {\n        /*\n         * In throttle mode without noLeading, if `delay` time has been exceeded, execute\n         * `callback`.\n         */\n        exec();\n      }\n    } else if (noTrailing !== true) {\n      /*\n       * In trailing throttle mode, since `delay` time has not been\n       * exceeded, schedule `callback` to execute `delay` ms after most\n       * recent execution.\n       *\n       * If `debounceMode` is true (at begin), schedule `clear` to execute\n       * after `delay` ms.\n       *\n       * If `debounceMode` is false (at end), schedule `callback` to\n       * execute after `delay` ms.\n       */\n      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\n    }\n  }\n\n  wrapper.cancel = cancel; // Return the wrapper function.\n\n  return wrapper;\n}\n\n/* eslint-disable no-undefined */\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param {number} delay -               A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param {Function} callback -          A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                        to `callback` when the debounced-function is executed.\n * @param {object} [options] -           An object to configure options.\n * @param {boolean} [options.atBegin] -  Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                        after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                        (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n *\n * @returns {Function} A new, debounced function.\n */\n\nfunction debounce (delay, callback, options) {\n  var _ref = options || {},\n      _ref$atBegin = _ref.atBegin,\n      atBegin = _ref$atBegin === void 0 ? false : _ref$atBegin;\n\n  return throttle(delay, callback, {\n    debounceMode: atBegin !== false\n  });\n}\n\nexport { debounce, throttle };\n//# sourceMappingURL=index.js.map\n","import { debounce } from 'throttle-debounce';\n\nconst { on } = window.ivent;\n\n/**\n * Debounce resize.\n */\nconst resizeArr = [];\nconst debounceResized = debounce(100, () => {\n\tif (resizeArr.length) {\n\t\tfor (let k = 0; k < resizeArr.length; k += 1) {\n\t\t\tresizeArr[k]();\n\t\t}\n\t}\n});\n\non(window, 'load', debounceResized);\non(window, 'resize', debounceResized);\non(window, 'orientationchange', debounceResized);\n\ndebounceResized();\n\nexport function debounceResize(func) {\n\tif (typeof func === 'function') {\n\t\tresizeArr.push(func);\n\t} else {\n\t\twindow.dispatchEvent(new Event('resize'));\n\t}\n}\n","import { debounceResize } from './utils/debounce-resize';\n\nconst { on } = window.ivent;\nconst { getComputedStyle } = window;\nconst { body } = document;\n\nfunction setVariable() {\n\t// Padding right is needed if the popup is open.\n\tconst width =\n\t\twindow.innerWidth - body.offsetWidth ||\n\t\tparseFloat(getComputedStyle(body).paddingRight);\n\tbody.style.setProperty('--scrollbar-width', `${width}px`);\n}\n\non(document, 'pvs.navigation.content-rendered', () => {\n\tsetVariable();\n});\n\non(document, 'pvs.pagination.rendered', (e) => {\n\tif (e.section === 'section-posts') {\n\t\tsetVariable();\n\t}\n});\n\ndebounceResize(() => {\n\tsetVariable();\n});\n","import { throttle } from 'throttle-debounce';\n\nconst { on } = window.ivent;\nconst hideOnScrollList = [];\nlet lastST = 0;\n\n/**\n * Throttle scroll.\n */\nconst handleScroll = () => {\n\tif (!hideOnScrollList.length) {\n\t\treturn;\n\t}\n\n\tconst ST = window.pageYOffset;\n\n\tlet type = ''; // [up, down, end, start]\n\n\tif (ST > lastST) {\n\t\ttype = 'down';\n\t} else if (ST < lastST) {\n\t\ttype = 'up';\n\t} else {\n\t\ttype = 'none';\n\t}\n\n\tif (ST === 0) {\n\t\ttype = 'start';\n\t} else if (\n\t\twindow.innerHeight + window.scrollY >=\n\t\tdocument.body.scrollHeight\n\t) {\n\t\ttype = 'end';\n\t}\n\n\thideOnScrollList.forEach((value) => {\n\t\tif (typeof value === 'function') {\n\t\t\tvalue(type, ST, lastST, window);\n\t\t}\n\t});\n\n\tlastST = ST;\n};\n\non(window, 'scroll', throttle(200, handleScroll));\non(window, 'load', handleScroll);\non(window, 'orientationchange', handleScroll);\n\nexport function throttleScroll(callback) {\n\thideOnScrollList.push(callback);\n}\n","import { throttleScroll } from './utils/throttle-scroll';\n\nconst { documentElement } = document;\n\nconst progress = document.querySelector('.scroll-progress');\n\nif (progress) {\n\t// Show or hide.\n\tthrottleScroll((type, scroll) => {\n\t\tconst maxHeight =\n\t\t\tdocumentElement.scrollHeight - documentElement.clientHeight;\n\n\t\tif (maxHeight < 500) {\n\t\t\tprogress.classList.remove('scroll-progress-show');\n\t\t}\n\n\t\tif (scroll > 100 && maxHeight > 500) {\n\t\t\tprogress.classList.add('scroll-progress-show');\n\t\t} else {\n\t\t\tprogress.classList.remove('scroll-progress-show');\n\t\t}\n\t});\n}\n","/*!\n* tabbable 6.2.0\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\n// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nvar candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable=\"false\"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  var _element$getRootNode;\n  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);\n} : function (element) {\n  return element === null || element === void 0 ? void 0 : element.ownerDocument;\n};\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nvar isInert = function isInert(node, lookUp) {\n  var _node$getAttribute;\n  if (lookUp === void 0) {\n    lookUp = true;\n  }\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');\n  var inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  var result = inert || lookUp && node && isInert(node.parentNode); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nvar isContentEditable = function isContentEditable(node) {\n  var _node$getAttribute2;\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nvar hasTabIndex = function hasTabIndex(node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nvar getTabIndex = function getTabIndex(node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nvar getSortOrderTabIndex = function getSortOrderTabIndex(node, isScope) {\n  var tabIndex = getTabIndex(node);\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n  return tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRoot;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  var nodeRoot = node && getRootNode(node);\n  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  var attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;\n    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));\n    while (!attached && nodeRootHost) {\n      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;\n      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));\n    }\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled ||\n  // we must do an inert look up to filter out any elements inside an inert ancestor\n  //  because we're limited in the type of selectors we can use in JSDom (see related\n  //  note related to `candidateSelectors`)\n  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getSortOrderTabIndex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, getTabIndex, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","/*!\n* focus-trap 7.5.4\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { isFocusable, tabbable, focusable, isTabbable, getTabIndex } from 'tabbable';\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Escape' || (e === null || e === void 0 ? void 0 : e.key) === 'Esc' || (e === null || e === void 0 ? void 0 : e.keyCode) === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Tab' || (e === null || e === void 0 ? void 0 : e.keyCode) === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element, event) {\n    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === 'function' ? event.composedPath() : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || ( // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n      optionValue = optionValue.apply(void 0, params);\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus');\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined || !isFocusable(node, config.tabbableOptions)) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : undefined;\n      var firstDomTabbableNode = focusableNodes.find(function (node) {\n        return isTabbable(node);\n      });\n      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {\n        return isTabbable(node);\n      });\n      var posTabIndexesFound = !!tabbableNodes.find(function (node) {\n        return getTabIndex(node) > 0;\n      });\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound: posTabIndexesFound,\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode: firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode: lastTabbableNode,\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode: firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode: lastDomTabbableNode,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          var nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {\n                return isTabbable(el);\n              });\n            }\n            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {\n              return isTabbable(el);\n            });\n          }\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (state.containerGroups.find(function (g) {\n      return g.posTabIndexesFound;\n    }) && state.containerGroups.length > 1) {\n      throw new Error(\"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\");\n    }\n  };\n\n  /**\n   * Gets the current activeElement. If it's a web-component and has open shadow-root\n   * it will recursively search inside shadow roots for the \"true\" activeElement.\n   *\n   * @param {Document | ShadowRoot} el\n   *\n   * @returns {HTMLElement} The element that currently has the focus\n   **/\n  var getActiveElement = function getActiveElement(el) {\n    var activeElement = el.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    if (activeElement.shadowRoot && activeElement.shadowRoot.activeElement !== null) {\n      return getActiveElement(activeElement.shadowRoot);\n    }\n    return activeElement;\n  };\n  var tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === getActiveElement(document)) {\n      return;\n    }\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  var findNextNavNode = function findNextNavNode(_ref2) {\n    var target = _ref2.target,\n      event = _ref2.event,\n      _ref2$isBackward = _ref2.isBackward,\n      isBackward = _ref2$isBackward === void 0 ? false : _ref2$isBackward;\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target, event);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var firstTabbableNode = _ref3.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref4) {\n          var lastTabbableNode = _ref4.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  var checkFocusIn = function checkFocusIn(event) {\n    var target = getActualTarget(event);\n    var targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      var nextNode; // next node to focus, if we find one\n      var navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            var mruTabIdx = tabbableNodes.findIndex(function (node) {\n              return node === state.mostRecentlyFocusedNode;\n            });\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (!state.containerGroups.some(function (g) {\n            return g.tabbableNodes.some(function (n) {\n              return getTabIndex(n) > 0;\n            });\n          })) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent)\n        });\n      }\n      if (nextNode) {\n        tryFocus(nextNode);\n      } else {\n        tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    state.recentNavEvent = event;\n    var destinationNode = findNextNavNode({\n      event: event,\n      isBackward: isBackward\n    });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  var checkKey = function checkKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n      return;\n    }\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  var checkDomRemoval = function checkDomRemoval(mutations) {\n    var isFocusedNodeRemoved = mutations.some(function (mutation) {\n      var removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;\n  var updateObservedNodes = function updateObservedNodes() {\n    if (!mutationObserver) {\n      return;\n    }\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      onActivate === null || onActivate === void 0 || onActivate();\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate === null || onPostActivate === void 0 || onPostActivate();\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      onDeactivate === null || onDeactivate === void 0 || onDeactivate();\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate === null || onPostDeactivate === void 0 || onPostDeactivate();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause(pauseOptions) {\n      if (state.paused || !state.active) {\n        return this;\n      }\n      var onPause = getOption(pauseOptions, 'onPause');\n      var onPostPause = getOption(pauseOptions, 'onPostPause');\n      state.paused = true;\n      onPause === null || onPause === void 0 || onPause();\n      removeListeners();\n      updateObservedNodes();\n      onPostPause === null || onPostPause === void 0 || onPostPause();\n      return this;\n    },\n    unpause: function unpause(unpauseOptions) {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n      var onUnpause = getOption(unpauseOptions, 'onUnpause');\n      var onPostUnpause = getOption(unpauseOptions, 'onPostUnpause');\n      state.paused = false;\n      onUnpause === null || onUnpause === void 0 || onUnpause();\n      updateTabbableNodes();\n      addListeners();\n      updateObservedNodes();\n      onPostUnpause === null || onPostUnpause === void 0 || onPostUnpause();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      updateObservedNodes();\n      return this;\n    }\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","const { body } = document;\n\nexport function bodyOverflow($overflow = true) {\n\tif ($overflow) {\n\t\tbody.style.setProperty('overflow', 'hidden');\n\t\tbody.style.setProperty('padding-right', 'var(--scrollbar-width)');\n\t} else {\n\t\tbody.style.setProperty('overflow', '');\n\t\tbody.style.setProperty('padding-right', '');\n\t}\n}\n","import { createFocusTrap } from 'focus-trap';\nimport { bodyOverflow } from './utils/body-overflow';\n\nconst { body } = document;\nconst { on, trigger } = window.ivent;\nconst { getComputedStyle } = window;\n\nconst popupMap = new Map();\nlet zIndex = 0;\nlet hasShowPopup = true;\n\nfunction initPopup(popup, popupId, content) {\n\tconst computedStyle = getComputedStyle(popup);\n\n\tpopupMap.set(popupId, {\n\t\tpopupId,\n\t\tpopup,\n\t\tpopupDuration: parseFloat(computedStyle.transitionDuration) * 1000,\n\t\tpopupIndex: parseFloat(computedStyle.zIndex),\n\t\thasOverflow: popup.getAttribute('data-popup-overflow') || true,\n\t\tcontent,\n\t\tfocusTrap: createFocusTrap(popup),\n\t\tfocusTimeout: null,\n\t\thideTimeout: null,\n\t\thasShow: true,\n\t});\n}\n\nfunction showPopup(popupId) {\n\tconst data = popupMap.get(popupId);\n\tconst {\n\t\tpopup,\n\t\tpopupDuration,\n\t\tfocusTrap,\n\t\tpopupIndex,\n\t\thideTimeout,\n\t\thasOverflow,\n\t} = data;\n\n\ttrigger(document, 'thesis.popup.show', { data });\n\n\t// Show.\n\tpopup.classList.remove('popup-hide');\n\tpopup.offsetHeight;\n\tpopup.classList.add('popup-open');\n\n\t// Focus trap.\n\tconst focusTimeout = setTimeout(() => {\n\t\tfocusTrap?.activate();\n\t}, popupDuration / 2);\n\n\t// z-index.\n\tclearTimeout(hideTimeout);\n\tzIndex += 1;\n\tpopup.style.setProperty('z-index', popupIndex + zIndex);\n\n\tdata.show = true;\n\tdata.focusTimeout = focusTimeout;\n\tif (hasOverflow !== 'false') {\n\t\tbodyOverflow();\n\t}\n}\n\nfunction hidePopup(popupId, data) {\n\tconst { popup, popupDuration, focusTrap, focusTimeout } = data;\n\n\ttrigger(document, 'thesis.popup.hide', { data });\n\n\tpopup.classList.remove('popup-open');\n\tpopup.offsetHeight;\n\tpopup.classList.add('popup-hide');\n\n\t// Deactivate focus trap.\n\tclearTimeout(focusTimeout);\n\tfocusTrap?.deactivate();\n\n\t// Remove z-index.\n\tdata.show = false;\n\tdata.hideTimeout = setTimeout(() => {\n\t\tpopup.style.setProperty('z-index', '');\n\t\tpopup.classList.remove('popup-hide');\n\t}, popupDuration);\n}\n\nfunction onHidePopup(popupId) {\n\tif (!popupMap.size) return;\n\n\thasShowPopup = false;\n\n\t// Hide visible popup.\n\tif (popupId) {\n\t\thidePopup(popupId, popupMap.get(popupId));\n\n\t\tpopupMap.forEach(({ show }) => {\n\t\t\tif (show) hasShowPopup = true;\n\t\t});\n\n\t\t// Hide all popups.\n\t} else {\n\t\tpopupMap.forEach((data, popupId) => {\n\t\t\thidePopup(popupId, data);\n\t\t});\n\t}\n\n\t// Disable overflow when all popups are hidden.\n\tif (!hasShowPopup) {\n\t\tbodyOverflow(false);\n\t\tzIndex = 0;\n\t}\n}\n\n// Init and open popup.\non(document, 'click', '[href^=\"#popup\"]', (e) => {\n\te.preventDefault();\n\tconst toggle = e.delegateTarget;\n\tconst href = toggle.getAttribute('href');\n\tconst popupId = href.slice(1);\n\n\t// Init popup.\n\tif (!popupMap.has(popupId)) {\n\t\tconst findPopup = document.querySelector(`.popup[data-id=\"${popupId}\"]`);\n\t\tif (findPopup) {\n\t\t\tinitPopup(findPopup, popupId, findPopup.children[0]);\n\t\t\tshowPopup(popupId);\n\t\t\treturn;\n\t\t}\n\n\t\t// Create popup.\n\t\tconst popup = document.createElement('div');\n\t\tpopup.dataset.id = popupId;\n\t\tpopup.classList.add('popup', popupId);\n\n\t\t// Create content.\n\t\tconst content = document.querySelector(href);\n\t\tconst newContent = document.createElement('div');\n\t\tnewContent.className = content.className;\n\t\tnewContent.innerHTML = content.innerHTML;\n\n\t\t// Append popup.\n\t\tpopup.append(newContent);\n\t\tbody.append(popup);\n\t\tpopup.offsetHeight;\n\n\t\tinitPopup(popup, popupId, newContent);\n\t}\n\n\tshowPopup(popupId);\n});\n\n// Hide popup.\non(document, 'click', '.popup-close', (e) => {\n\te.preventDefault();\n\tconst popup = e.delegateTarget.closest('.popup');\n\n\tif (popup) {\n\t\tonHidePopup(popup.getAttribute('data-id'));\n\t\treturn;\n\t}\n\n\tonHidePopup();\n});\n\non(document, 'keyup', (e) => {\n\tif (e.key === 'Escape') onHidePopup();\n});\n\non(document, 'pvs.navigation.loading pvs.navigation.content-render', () => {\n\tonHidePopup();\n});\n"],"names":["pvs","window","initDarkMode","initLightbox","zIndex","initScrollProgress","initFilter","initPagination","initDropdown","initNavigation","on","ivent","on$6","document","async","e","preventDefault","navigator","clipboard","writeText","delegateTarget","getAttribute","err","console","error","scrollTo","top","behavior","querySelectorAll","forEach","el","textContent","replace","currentHref","location","origin","pathname","search","link","item","parentNode","href","classList","add","remove","sidebar","querySelector","activePost","scrollToPost","scrollHeight","clientHeight","scrollTop","itemOffsetTop","offsetTop","itemHeight","scroll","throttle","delay","callback","options","timeoutID","_ref","_ref$noTrailing","noTrailing","_ref$noLeading","noLeading","_ref$debounceMode","debounceMode","undefined","cancelled","lastExec","clearExistingTimeout","clearTimeout","wrapper","_len","arguments","length","arguments_","Array","_key","self","this","elapsed","Date","now","exec","apply","clear","setTimeout","cancel","_ref2$upcomingOnly","upcomingOnly","resizeArr","debounceResized","debounce","k","getComputedStyle","body","setVariable","width","innerWidth","offsetWidth","parseFloat","paddingRight","style","setProperty","func","section","push","dispatchEvent","Event","hideOnScrollList","lastST","handleScroll","ST","pageYOffset","type","innerHeight","scrollY","value","documentElement","progress","maxHeight","candidateSelectors","candidateSelector","join","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","_element$getRootNode","call","ownerDocument","isInert","node","lookUp","_node$getAttribute","inertAtt","getCandidates","includeContainer","filter","candidates","slice","unshift","getCandidatesIteratively","elements","elementsToCheck","from","shift","tagName","assigned","assignedElements","nestedCandidates","children","flatten","scopeParent","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","_nestedCandidates","hasTabIndex","isNaN","parseInt","getTabIndex","Error","tabIndex","test","_node$getAttribute2","attValue","isContentEditable","sortOrderedTabbables","a","b","documentOrder","isInput","isNonTabbableRadio","isRadio","name","radioSet","radioScope","form","queryRadios","CSS","escape","message","checked","nodes","i","getCheckedRadio","isTabbableRadio","isZeroArea","_node$getBoundingClie","getBoundingClientRect","height","isHidden","displayCheck","visibility","nodeUnderDetails","parentElement","originalNode","rootNode","assignedSlot","host","_nodeRoot","_nodeRootHost","_nodeRootHost$ownerDo","_node$ownerDocument","nodeRoot","nodeRootHost","attached","contains","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isNodeAttached","getClientRects","isNodeMatchingSelectorFocusable","disabled","isHiddenInput","some","child","isDetailsWithSummary","isDisabledFromFieldset","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","isScope","candidateTabindex","getSortOrderTabIndex","content","sort","reduce","acc","sortable","concat","isTabbable","focusableCandidateSelector","isFocusable","activeFocusTraps","activateTrap","trapStack","trap","activeTrap","pause","trapIndex","indexOf","splice","deactivateTrap","unpause","isTabEvent","key","keyCode","isKeyForward","shiftKey","isKeyBackward","fn","findIndex","arr","idx","every","valueOrHandler","params","getActualTarget","event","target","composedPath","internalTrapStack","createFocusTrap","userOptions","doc","config","_objectSpread2","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","containerGroups","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","delayInitialFocusTimer","recentNavEvent","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","container","tabbableNodes","find","getNodeForOption","optionValue","_len2","_key2","getInitialFocusNode","tabbableOptions","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","bind","tabbable","focusableNodes","focusable","lastTabbableNode","firstDomTabbableNode","lastDomTabbableNode","reverse","posTabIndexesFound","nextTabbableNode","forward","nodeIdx","group","g","getActiveElement","tryFocus","focus","preventScroll","toLowerCase","select","isSelectableInput","getReturnFocusNode","previousActiveElement","findNextNavNode","_ref2","_ref2$isBackward","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref3","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref4","_destinationGroupIndex","_destinationGroup","checkPointerDown","clickOutsideDeactivates","deactivate","returnFocus","allowOutsideClick","checkFocusIn","targetContained","Document","nextNode","stopImmediatePropagation","navAcrossContainers","mruContainerIdx","mruTabIdx","n","checkKey","checkKeyNav","checkClick","addListeners","addEventListener","capture","passive","removeListeners","removeEventListener","mutationObserver","MutationObserver","mutations","mutation","removedNodes","updateObservedNodes","disconnect","observe","subtree","childList","activate","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","then","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","finishDeactivation","pauseOptions","onPause","onPostPause","unpauseOptions","onUnpause","onPostUnpause","updateContainerElements","containerElements","elementsAsArray","Boolean","bodyOverflow","trigger","popupMap","Map","hasShowPopup","initPopup","popup","popupId","computedStyle","set","popupDuration","transitionDuration","popupIndex","hasOverflow","focusTrap","focusTimeout","hideTimeout","hasShow","showPopup","data","get","offsetHeight","show","hidePopup","onHidePopup","size","has","findPopup","createElement","dataset","id","newContent","className","innerHTML","append","closest"],"mappings":"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","x_google_ignoreList":[6,11,12]}